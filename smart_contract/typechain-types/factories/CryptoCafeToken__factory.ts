/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CryptoCafeToken,
  CryptoCafeTokenInterface,
} from "../CryptoCafeToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
    ],
    name: "setMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86006553480156200001757600080fd5b506040518060400160405280600a81526020017f43727970746f43616665000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f434341460000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009c929190620001ac565b508060049080519060200190620000b5929190620001ac565b505050620000d8620000cc620000de60201b60201c565b620000e660201b60201c565b620002c1565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001ba906200025c565b90600052602060002090601f016020900481019282620001de57600085556200022a565b82601f10620001f957805160ff19168380011785556200022a565b828001600101855582156200022a579182015b82811115620002295782518255916020019190600101906200020c565b5b5090506200023991906200023d565b5090565b5b80821115620002585760008160009055506001016200023e565b5090565b600060028204905060018216806200027557607f821691505b602082108114156200028c576200028b62000292565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61196680620002d16000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461029f578063a9059cbb146102cf578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b806370a0823114610229578063715018a6146102595780638da5cb5b1461026357806395d89b411461028157610100565b806323b872dd116100d357806323b872dd1461018f578063313ce567146101bf57806339509351146101dd5780636f8b44b01461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806322f4596f14610171575b600080fd5b61010d61034b565b60405161011a9190611305565b60405180910390f35b61013d60048036038101906101389190611097565b6103dd565b60405161014a91906112ea565b60405180910390f35b61015b6103fb565b6040516101689190611467565b60405180910390f35b610179610405565b6040516101869190611467565b60405180910390f35b6101a960048036038101906101a49190611048565b61040b565b6040516101b691906112ea565b60405180910390f35b6101c7610503565b6040516101d49190611482565b60405180910390f35b6101f760048036038101906101f29190611097565b61050c565b60405161020491906112ea565b60405180910390f35b610227600480360381019061022291906110d3565b6105b8565b005b610243600480360381019061023e9190610fe3565b610681565b6040516102509190611467565b60405180910390f35b6102616106c9565b005b61026b610751565b60405161027891906112cf565b60405180910390f35b61028961077b565b6040516102969190611305565b60405180910390f35b6102b960048036038101906102b49190611097565b61080d565b6040516102c691906112ea565b60405180910390f35b6102e960048036038101906102e49190611097565b6108f8565b6040516102f691906112ea565b60405180910390f35b6103196004803603810190610314919061100c565b610916565b6040516103269190611467565b60405180910390f35b61034960048036038101906103449190610fe3565b61099d565b005b60606003805461035a90611597565b80601f016020809104026020016040519081016040528092919081815260200182805461038690611597565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b60006103f16103ea610a95565b8484610a9d565b6001905092915050565b6000600254905090565b60065481565b6000610418848484610c68565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610463610a95565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da906113a7565b60405180910390fd5b6104f7856104ef610a95565b858403610a9d565b60019150509392505050565b60006012905090565b60006105ae610519610a95565b848460016000610527610a95565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a991906114b9565b610a9d565b6001905092915050565b6105c0610a95565b73ffffffffffffffffffffffffffffffffffffffff166105de610751565b73ffffffffffffffffffffffffffffffffffffffff1614610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b906113c7565b60405180910390fd5b60008111610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90611427565b60405180910390fd5b8060068190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106d1610a95565b73ffffffffffffffffffffffffffffffffffffffff166106ef610751565b73ffffffffffffffffffffffffffffffffffffffff1614610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c906113c7565b60405180910390fd5b61074f6000610ee9565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461078a90611597565b80601f01602080910402602001604051908101604052809291908181526020018280546107b690611597565b80156108035780601f106107d857610100808354040283529160200191610803565b820191906000526020600020905b8154815290600101906020018083116107e657829003601f168201915b5050505050905090565b6000806001600061081c610a95565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090611447565b60405180910390fd5b6108ed6108e4610a95565b85858403610a9d565b600191505092915050565b600061090c610905610a95565b8484610c68565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6109a5610a95565b73ffffffffffffffffffffffffffffffffffffffff166109c3610751565b73ffffffffffffffffffffffffffffffffffffffff1614610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a10906113c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8090611347565b60405180910390fd5b610a9281610ee9565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490611407565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490611367565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c5b9190611467565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf906113e7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611327565b60405180910390fd5b610d53838383610faf565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd090611387565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e6c91906114b9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ed09190611467565b60405180910390a3610ee3848484610fb4565b50505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610fc881611902565b92915050565b600081359050610fdd81611919565b92915050565b600060208284031215610ff557600080fd5b600061100384828501610fb9565b91505092915050565b6000806040838503121561101f57600080fd5b600061102d85828601610fb9565b925050602061103e85828601610fb9565b9150509250929050565b60008060006060848603121561105d57600080fd5b600061106b86828701610fb9565b935050602061107c86828701610fb9565b925050604061108d86828701610fce565b9150509250925092565b600080604083850312156110aa57600080fd5b60006110b885828601610fb9565b92505060206110c985828601610fce565b9150509250929050565b6000602082840312156110e557600080fd5b60006110f384828501610fce565b91505092915050565b6111058161150f565b82525050565b61111481611521565b82525050565b60006111258261149d565b61112f81856114a8565b935061113f818560208601611564565b61114881611627565b840191505092915050565b60006111606023836114a8565b915061116b82611638565b604082019050919050565b60006111836026836114a8565b915061118e82611687565b604082019050919050565b60006111a66022836114a8565b91506111b1826116d6565b604082019050919050565b60006111c96026836114a8565b91506111d482611725565b604082019050919050565b60006111ec6028836114a8565b91506111f782611774565b604082019050919050565b600061120f6020836114a8565b915061121a826117c3565b602082019050919050565b60006112326025836114a8565b915061123d826117ec565b604082019050919050565b60006112556024836114a8565b91506112608261183b565b604082019050919050565b6000611278601c836114a8565b91506112838261188a565b602082019050919050565b600061129b6025836114a8565b91506112a6826118b3565b604082019050919050565b6112ba8161154d565b82525050565b6112c981611557565b82525050565b60006020820190506112e460008301846110fc565b92915050565b60006020820190506112ff600083018461110b565b92915050565b6000602082019050818103600083015261131f818461111a565b905092915050565b6000602082019050818103600083015261134081611153565b9050919050565b6000602082019050818103600083015261136081611176565b9050919050565b6000602082019050818103600083015261138081611199565b9050919050565b600060208201905081810360008301526113a0816111bc565b9050919050565b600060208201905081810360008301526113c0816111df565b9050919050565b600060208201905081810360008301526113e081611202565b9050919050565b6000602082019050818103600083015261140081611225565b9050919050565b6000602082019050818103600083015261142081611248565b9050919050565b600060208201905081810360008301526114408161126b565b9050919050565b600060208201905081810360008301526114608161128e565b9050919050565b600060208201905061147c60008301846112b1565b92915050565b600060208201905061149760008301846112c0565b92915050565b600081519050919050565b600082825260208201905092915050565b60006114c48261154d565b91506114cf8361154d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611504576115036115c9565b5b828201905092915050565b600061151a8261152d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611582578082015181840152602081019050611567565b83811115611591576000848401525b50505050565b600060028204905060018216806115af57607f821691505b602082108114156115c3576115c26115f8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f7468697320737472696e672073686f756c64206e6f7420656d70747900000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61190b8161150f565b811461191657600080fd5b50565b6119228161154d565b811461192d57600080fd5b5056fea26469706673582212201defd5d24e98ba592ea6736e1655eea7daa1e57c25fd3e8dfd36fd394b012c0064736f6c63430008040033";

type CryptoCafeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoCafeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoCafeToken__factory extends ContractFactory {
  constructor(...args: CryptoCafeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CryptoCafeToken> {
    return super.deploy(overrides || {}) as Promise<CryptoCafeToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CryptoCafeToken {
    return super.attach(address) as CryptoCafeToken;
  }
  connect(signer: Signer): CryptoCafeToken__factory {
    return super.connect(signer) as CryptoCafeToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoCafeTokenInterface {
    return new utils.Interface(_abi) as CryptoCafeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoCafeToken {
    return new Contract(address, _abi, signerOrProvider) as CryptoCafeToken;
  }
}
